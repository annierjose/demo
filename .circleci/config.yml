version: 2
jobs:
  build:
    working_directory: ~/demo
    docker:
      - image: circleci/openjdk:8-jdk-browsers
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          key: demo-{{ checksum "pom.xml" }}
      - run: mvn dependency:go-offline
      - save_cache:
          paths:
          - ~/.m2
          key: demo-{{ checksum "pom.xml" }}
      - run: mvn package
      - store_test_results:
          path: target/surefire-reports
      - store_artifacts:
          path: target/demo-0.0.1-SNAPSHOT.jar
      - run:
          name: Set convenience environment variables
          command: |
            echo 'export ECR_REPOSITORY_NAME="${AWS_RESOURCE_NAME_PREFIX}"' >> $BASH_ENV
            echo 'export FULL_IMAGE_NAME="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${ECR_REPOSITORY_NAME}:${CIRCLE_SHA1}"' >> $BASH_ENV
      - run:
          name: Build image
          command: docker build -t $FULL_IMAGE_NAME .
      - run:
          name: Save image to an archive
          command: |
            mkdir docker-image
            docker save -o docker-image/image.tar $FULL_IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - docker-image


  deploy:
    docker:
      - image: circleci/openjdk:8-jdk-browsers
    environment:
      AWS_DEFAULT_OUTPUT: json
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: workspace
      - run:
          name: Install the AWS CLI
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          key: v1-{{ checksum "requirements.txt" }}
          paths:
            - "venv"



workflows:
  version: 2
  build-deploy:
    jobs:
    - build
    - deploy:
        requires:
        - build
        filters:
          branches:
            only: master